; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = ai-thinker-cam-debug
boards_dir = ./boards
src_dir = src
lib_dir = lib

[env]
platform = espressif32@6.8.1
framework = arduino
lib_ldf_mode = deep+
upload_speed = 115200
monitor_speed = 115200
board_build.filesystem = spiffs
build_type = release
lib_deps = 
	espressif/esp32-camera
build_flags = 
	-D ARDUINO_ARCH_ESP32
	-D CONFIG_IDF_TARGET_ESP32=1
	-D CAMERA_MULTICLIENT_TASK
	-I "$PROJECT_LIBDEPS_DIR/$PIOENV/esp32-camera/driver/include"
	-I "$PROJECT_LIBDEPS_DIR/$PIOENV/esp32-camera/conversions/include"
	-D CONFIG_SCCB_CLK_FREQ=400000
	-D FRAME_SIZE=FRAMESIZE_HD
	-D XCLK_FREQ=24000000
	-D FPS=30
	-D WSINTERVAL=0
	-D MAX_CLIENTS=6
	-D JPEG_QUALITY=10
	-D CONFIG_CAMERA_DMA_BUFFER_SIZE_MAX=131072
	-D CONFIG_CAMERA_TASK_STACK_SIZE=8192
	-D CONFIG_CAMERA_CORE0=1
	-D CONFIG_FREERTOS_HZ=1000
	-D CONFIG_ESP_INSIGHTS_ENABLED=0
	-D CONFIG_ESP_INSIGHTS_TRANSPORT_HTTPS=0
	-D CONFIG_ESP_INSIGHTS_TRANSPORT_MQTT=0
	-D CONFIG_ESP_RAINMAKER_ENABLED=0
	-D CONFIG_ESP_TLS_ENABLED=0
	-D CONFIG_MBEDTLS_TLS_ENABLED=0
	-D LOG_LEVEL=0
	-D DISABLE_LOGGING
	-D WM_NODEBUG
	-D CONFIG_COMPILER_OPTIMIZATION_PERF=1
	-D CONFIG_ESP32_DEFAULT_CPU_FREQ_MHZ=240
	-D CONFIG_BT_ENABLED=0
	-D CONFIG_BLUEDROID_ENABLED=0
	-D CONFIG_WIFI_PS_NONE=1
	-D CONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM=16
	-D CONFIG_ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM=64
	-D CONFIG_ESP32_WIFI_STATIC_TX_BUFFER_NUM=32
	-D CONFIG_ESP32_WIFI_CACHE_TX_BUFFER_NUM=64
	-D CONFIG_ESP32_WIFI_AMPDU_TX_ENABLED=1
	-D CONFIG_ESP32_WIFI_AMPDU_RX_ENABLED=1
	-D CONFIG_ESP32_WIFI_TX_BA_WIN=32
	-D CONFIG_ESP32_WIFI_RX_BA_WIN=32
	-D CONFIG_ESP32_WIFI_NVS_ENABLED=1
	-D CONFIG_ESP32_WIFI_TASK_PINNED_TO_CORE_0=1
	-D CONFIG_ESP32_WIFI_IRAM_OPT=1
	-D CONFIG_ESP32_WIFI_RX_IRAM_OPT=1
	-D CONFIG_LWIP_TCP_SND_BUF_DEFAULT=65535
	-D CONFIG_LWIP_TCP_WND_DEFAULT=65535
	-D CONFIG_LWIP_TCP_RECVMBOX_SIZE=32
	-D CONFIG_LWIP_UDP_RECVMBOX_SIZE=32
	-D CONFIG_LWIP_TCPIP_RECVMBOX_SIZE=64
	-D CONFIG_LWIP_TCP_MSS=1460
	-D CONFIG_LWIP_TCP_TMR_INTERVAL=125
lib_ignore = 
	DNSServer
	ArduinoOTA
	ESP_SR
	ESP_Insights
	ESP_RainMaker
	ESP_Modbus
	ESP_DSP
	libsodium
	mdns
	network_provisioning
	qrcode
	rmaker_common

[env:debug]
build_flags = 
	-D LOG_LEVEL=6
	-D BENCHMARK

[env:ai-thinker-cam]
build_unflags = -Werror
board = esp32cam
board_build.partitions = ai-thinker-cam.csv
build_flags = 
	${env.build_flags}
	-D CAMERA_MODEL_WROVER_KIT

[env:ai-thinker-cam-debug]
build_type = debug
board = esp32cam
board_build.partitions = ai-thinker-cam.csv
build_flags = 
	${env.build_flags}
	${env:debug.build_flags}
	-D CAMERA_MODEL_WROVER_KIT
build_src_filter = 
	+<*>
	-<.git/>
	-<.svn/>

[env:esp-eye]
board = esp-eye
board_build.partitions = esp-eye.csv
build_flags = 
	${env.build_flags}
	-D CAMERA_MODEL_ESP_EYE

[env:esp-eye-debug]
build_type = debug
board = esp-eye
board_build.partitions = esp-eye.csv
build_flags = 
	${env.build_flags}
	${env:debug.build_flags}
	-D CAMERA_MODEL_ESP_EYE
	-D FLIP_VERTICALLY
	-D WM_DEBUG_LEVEL=WM_DEBUG_VERBOSE

[env:freenove-wrover-cam]
board = freenove-wrover-cam
board_build.partitions = freenove-wrover-cam.csv
build_flags = 
	${env.build_flags}
	-D CAMERA_MODEL_WROVER_KIT

; Custom tasks for ESP32-CAM development
; Usage: pio run --target <task_name>

; Quick SPIFFS update (most common task)
[env:update-spiffs]
extends = ai-thinker-cam-debug
platform_packages = 
extra_scripts = 
    pre:extra_scripts.py

; Full rebuild and upload
[env:full-update]
extends = ai-thinker-cam-debug
platform_packages = 
extra_scripts = 
    pre:extra_scripts.py
